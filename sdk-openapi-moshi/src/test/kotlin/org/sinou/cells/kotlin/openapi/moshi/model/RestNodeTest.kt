/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.sinou.cells.kotlin.openapi.moshi.model

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.sinou.cells.kotlin.openapi.moshi.model.RestNode
import org.sinou.cells.kotlin.openapi.moshi.model.ActivityObject
import org.sinou.cells.kotlin.openapi.moshi.model.ActivitySubscription
import org.sinou.cells.kotlin.openapi.moshi.model.RestContextWorkspace
import org.sinou.cells.kotlin.openapi.moshi.model.RestCountMeta
import org.sinou.cells.kotlin.openapi.moshi.model.RestDataSourceFeatures
import org.sinou.cells.kotlin.openapi.moshi.model.RestFilePreview
import org.sinou.cells.kotlin.openapi.moshi.model.RestImageMeta
import org.sinou.cells.kotlin.openapi.moshi.model.RestJsonMeta
import org.sinou.cells.kotlin.openapi.moshi.model.RestLockInfo
import org.sinou.cells.kotlin.openapi.moshi.model.RestMode
import org.sinou.cells.kotlin.openapi.moshi.model.RestRevisionMeta
import org.sinou.cells.kotlin.openapi.moshi.model.RestShareLink
import org.sinou.cells.kotlin.openapi.moshi.model.RestUserMeta
import org.sinou.cells.kotlin.openapi.moshi.model.TreeNodeType

class RestNodeTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of RestNode
        //val modelInstance = RestNode()

        // to test the property `path`
        should("test path") {
            // uncomment below to test the property
            //modelInstance.path shouldBe ("TODO")
        }

        // to test the property `uuid`
        should("test uuid") {
            // uncomment below to test the property
            //modelInstance.uuid shouldBe ("TODO")
        }

        // to test the property `activities`
        should("test activities") {
            // uncomment below to test the property
            //modelInstance.activities shouldBe ("TODO")
        }

        // to test the property `contentLock`
        should("test contentLock") {
            // uncomment below to test the property
            //modelInstance.contentLock shouldBe ("TODO")
        }

        // to test the property `contentType`
        should("test contentType") {
            // uncomment below to test the property
            //modelInstance.contentType shouldBe ("TODO")
        }

        // to test the property `contentsHash`
        should("test contentsHash") {
            // uncomment below to test the property
            //modelInstance.contentsHash shouldBe ("TODO")
        }

        // to test the property `contextWorkspace`
        should("test contextWorkspace") {
            // uncomment below to test the property
            //modelInstance.contextWorkspace shouldBe ("TODO")
        }

        // to test the property `dataSourceFeatures`
        should("test dataSourceFeatures") {
            // uncomment below to test the property
            //modelInstance.dataSourceFeatures shouldBe ("TODO")
        }

        // to test the property `folderMeta`
        should("test folderMeta") {
            // uncomment below to test the property
            //modelInstance.folderMeta shouldBe ("TODO")
        }

        // to test the property `hashingMethod`
        should("test hashingMethod") {
            // uncomment below to test the property
            //modelInstance.hashingMethod shouldBe ("TODO")
        }

        // to test the property `imageMeta`
        should("test imageMeta") {
            // uncomment below to test the property
            //modelInstance.imageMeta shouldBe ("TODO")
        }

        // to test the property `isBookmarked`
        should("test isBookmarked") {
            // uncomment below to test the property
            //modelInstance.isBookmarked shouldBe ("TODO")
        }

        // to test the property `isRecycleBin`
        should("test isRecycleBin") {
            // uncomment below to test the property
            //modelInstance.isRecycleBin shouldBe ("TODO")
        }

        // to test the property `isRecycled`
        should("test isRecycled") {
            // uncomment below to test the property
            //modelInstance.isRecycled shouldBe ("TODO")
        }

        // to test the property `metadata`
        should("test metadata") {
            // uncomment below to test the property
            //modelInstance.metadata shouldBe ("TODO")
        }

        // to test the property `mode`
        should("test mode") {
            // uncomment below to test the property
            //modelInstance.mode shouldBe ("TODO")
        }

        // to test the property `modified` - Date instead of TS ?
        should("test modified") {
            // uncomment below to test the property
            //modelInstance.modified shouldBe ("TODO")
        }

        // to test the property `previews`
        should("test previews") {
            // uncomment below to test the property
            //modelInstance.previews shouldBe ("TODO")
        }

        // to test the property `revisionMeta`
        should("test revisionMeta") {
            // uncomment below to test the property
            //modelInstance.revisionMeta shouldBe ("TODO")
        }

        // to test the property `shares`
        should("test shares") {
            // uncomment below to test the property
            //modelInstance.shares shouldBe ("TODO")
        }

        // to test the property `propertySize`
        should("test propertySize") {
            // uncomment below to test the property
            //modelInstance.propertySize shouldBe ("TODO")
        }

        // to test the property `storageETag`
        should("test storageETag") {
            // uncomment below to test the property
            //modelInstance.storageETag shouldBe ("TODO")
        }

        // to test the property `subscriptions`
        should("test subscriptions") {
            // uncomment below to test the property
            //modelInstance.subscriptions shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `userMetadata`
        should("test userMetadata") {
            // uncomment below to test the property
            //modelInstance.userMetadata shouldBe ("TODO")
        }

    }
}
